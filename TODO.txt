scratch area + TODO keeper for sjasmplus developers:
====================================================


====================
Ped:

LUA quirks:
    -- v includelua:
    function inc_ld(reg, val)
        _pc('LD '..reg..','..val)
    end
    -- v kode:
    LUA
        inc_ld(A, pass)     -- bug, should be 'A'
    ENDLUA
= no output, no error, just dies. ... Seems like any LUA syntax error does that, just dies.

Z80: multi-argument/strict: introduce the options

FIXME in sources mark further points worth refactoring

FIXME: wait a second, MAP is not synonym for STRUCT and they have separate parsing code?!?
    BTW "##" parsing is EVERYWHERE ... :/

FIXME: get rid of ParseDirective_REPT somehow, its existence can't be right
(breaks ` .34 repeatX` directive probably? .. and END@beginningOfLine? .. actually not?)
    == needs MAPS refactoring first (to get those ## under control ...

"--lst" bez hodnoty nech spravi default nazov sam
  ==> needs tests (badly, was bugged a lot during development)

ReadBufLine parsing refactored. Now look for other parts of code trying to do similar things and refactor too..

I almost certainly broke some STRCPY/STRCAT max-size limits (i.e. malicious source may buffer overflow)...

from env. variables disc: nie, myslel som ako "SJASMPLUSEXT" premennu ktora by tvorila priamo obsah pre
ten `--ext` switch... pouzitie stylom ako "prilep k command line" mi nenapadlo... nieco ako CFLAGS
v Makefile? ... na to by som dal ale druhu premennu "SJASMPLUSFLAGS"

Macro world issues:
- macros for operators? (in ideal case `zeuskeyaddr` possible to recreate in macro?)
- ability to issue real instruction (ignoring possible macro of same name)

Input file without extension does produce wrong default output filename

- ValidateLabel z makra zhltne jedno @ do stratena?!?

====================
Docs:

"pseudo-ops as SAVEBIN, SAVEHOB, SAVETRD, SAVETAP, PAGE, SLOT, LABELSLIST and use special functions in Lua scripts."
^^ link each?
