task:
  name: Linux gcc 5/6/7/8 builds
  env:
    CIRRUS_CLONE_DEPTH: 1
  container:
    matrix:
      image: gcc:5
      image: gcc:6
      image: gcc:7
      image: gcc:8
    cpu: 3
    memory: 1G
  build_script: make clean && make -j3
  install_script: make install && make clean
  ## now try the built+installed sjasmplus with some tests and examples
  # this is not separate task, because that would need again build
  # of sjasmplus in new container instance, so just do everything in one task
  assemble_tests_script: ContinuousIntegration/test_folder_tests.sh
  assemble_examples_script: ContinuousIntegration/test_folder_examples.sh

pipe:
  name: coveralls.io coverage report (linux gcc6)
  # check if this is ped's repository (the encrypted token belongs to his repo)
  only_if: $CIRRUS_REPO_OWNER == 'ped7g'
  #depends_on: makefile_build  ## saves some resources in case regular build fails, but that's rare
  env:
    # needs full clone to calculate revision number from git
    CIRRUS_CLONE_DEPTH: 0
    # coveralls plugin variables (access token + job ID)
    COVERALLS_REPO_TOKEN: ENCRYPTED[d8f3d878d91ea465e92170a7d46f471aec4a507813b6c31faa630dd1a1380420827ebc017baa2157bf17b3ed95437aae]
    CI_SERVICE_NAME: 'cirrus-ci'
    # makefile variables affecting build options
    DEBUG: 1
    COVERALLS_SERVICE: 1
  resources:
    cpu: 3
    memory: 1G
  steps:
    - image: gcc:7
      generate_gcov_script: make clean && make -j3 coverage
    - image: python:3.7
      # installing my patched version of "cpp-coveralls" to get support for CI_SERVICE_NAME and git-revision number
      install_coveralls_plugin_script: pip install git+https://github.com/ped7g/cpp-coveralls.git@master
      # "-n" as the *.gcov files are already generated in the project root from previous step
      upload_gcov_data_script: cpp-coveralls -n -e lua5.1/ -e tolua++/

task:
  name: windows mingw32 build
  env:
    CIRRUS_CLONE_DEPTH: 1
  windows_container:
    image: cirrusci/windowsservercore:cmake
    os_version: 2019
  build_script: ContinuousIntegration\winbuild_mingw32.bat
  check_installed_sj_script: c:\tools\sjasmplus\sjasmplus --help
  assemble_examples_script: ContinuousIntegration\winbuild_mingw32_examples.bat
  assemble_tests_script: ContinuousIntegration\winbuild_mingw32_tests.bat

task:
  name: windows Visual Studio 15 2017 build
  env:
    CIRRUS_CLONE_DEPTH: 1
  windows_container:
    image: cirrusci/windowsservercore:cmake
    os_version: 2019
  build_script: ContinuousIntegration\winbuild_vs15_2017.bat
#  check_installed_sj_script: c:\tools\sjasmplus\sjasmplus --help
#  install_script: make -f Makefile.win install
  # let's see first if the make build works, before even trying to run the tests somehow

  ## now try the built+installed sjasmplus with some tests and examples
  # this is not separate task, because that would need again build
  # of sjasmplus in new container instance, so just do everything in one task
  #assemble_tests_script: ContinuousIntegration/test_folder_tests.sh
  #assemble_examples_script: ContinuousIntegration/test_folder_examples.sh

